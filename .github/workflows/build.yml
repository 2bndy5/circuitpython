name: Build CI

on:
  push:
    branches:
    - master
    - github-ci
  pull_request:
  release:

jobs:
  test:
    runs-on: ubuntu-16.04
    steps:
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: echo "$GITHUB_CONTEXT"
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Install deps
      run: |
        sudo apt-get install -y gettext librsvg2-bin
        pip install requests sh click setuptools cpp-coveralls Sphinx sphinx-rtd-theme recommonmark sphinxcontrib-svg2pdfconverter polib
    - name: Versions
      run: |
        gcc --version
        python3 --version
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: CircuitPython version
      run: git describe --dirty --always --tags
    - name: Build mpy-cross
      run: make -C mpy-cross -j2
    - name: Build unix port
      run: |
        make -C ports/unix deplibs -j2
        make -C ports/unix -j2
        make -C ports/unix coverage -j2
    - name: Test all
      run: MICROPY_CPYTHON3=python3.5 MICROPY_MICROPYTHON=../ports/unix/micropython_coverage ./run-tests -j1
      working-directory: tests
    - name: Print failure info
      run: |
        for exp in *.exp;
        do testbase=$(basename $exp .exp);
        echo -e "\nFAILURE $testbase";
        diff -u $testbase.exp $testbase.out;
        done
      working-directory: tests
      if: failure()
    - name: Test threads
      run: MICROPY_CPYTHON3=python3.5 MICROPY_MICROPYTHON=../ports/unix/micropython_coverage ./run-tests -j1 -d thread
      working-directory: tests
    - name: Native Tests
      run: MICROPY_CPYTHON3=python3.5 MICROPY_MICROPYTHON=../ports/unix/micropython_coverage ./run-tests -j1 --emit native
      working-directory: tests
    - name: mpy Tests
      run: MICROPY_CPYTHON3=python3.5 MICROPY_MICROPYTHON=../ports/unix/micropython_coverage ./run-tests -j1 --via-mpy -d basics float
      working-directory: tests
    - name: Docs
      run: sphinx-build -E -W -b html . _build/html
    - name: Translations
      run: make check-translate
    - name: New boards check
      run: python3 -u travis_new_boards_check.py
      working-directory: tools

  build-arm:
    runs-on: ubuntu-16.04
    needs: test
    strategy:
      fail-fast: false
      matrix:
        board:
        - "metro_m0_express"
        - "metro_m4_express"
        - "trinket_m0_haxpress"
        - "circuitplayground_express"
        - "mini_sam_m4"
        - "grandcentral_m4_express"
        - "capablerobot_usbhub"
        - "pygamer"
        - "pca10056"
        - "pca10059"
        - "feather_nrf52840_express"
        - "metro_nrf52840_express"
        - "circuitplayground_bluefruit"
        - "makerdiary_nrf52840_mdk"
        - "makerdiary_nrf52840_mdk_usb_dongle"
        - "particle_boron"
        - "particle_argon"
        - "particle_xenon"
        - "sparkfun_nrf52840_mini"
        - "electronut_labs_papyr"
        - "electronut_labs_blip"
        - "metro_m4_airlift_lite"
        - "pirkey_m0"
        - "trellis_m4_express"
        - "trinket_m0"
        - "sparkfun_lumidrive"
        - "sparkfun_redboard_turbo"
        - "bast_pro_mini_m0"
        - "datum_distance"
        - "pyruler"
        - "cp32-m4"
        - "feather_radiofruit_zigbee"
        - "gemma_m0"
        - "hallowing_m0_express"
        - "itsybitsy_m0_express"
        - "itsybitsy_m4_express"
        - "meowmeow"
        - "sam32"
        - "uchip"
        - "escornabot_makech"
        - "pygamer_advance"
        - "datum_imu"
        - "snekboard"
        - "feather_m0_supersized"
        - "feather_m0_express_crickit"
        - "feather_m0_rfm69"
        - "feather_m0_rfm9x"
        - "feather_m4_express"
        - "arduino_zero"
        - "arduino_mkr1300"
        - "arduino_mkrzero"
        - "pewpew10"
        - "kicksat-sprite"
        - "ugame10"
        - "robohatmm1_m0"
        - "robohatmm1_m4"
        - "datum_light"
        - "datalore_ip_m4"
        - "circuitplayground_express_crickit"
        - "feather_m0_adalogger"
        - "feather_m0_basic"
        - "feather_m0_express"
        - "catwan_usbstick"
        - "pyportal"
        - "sparkfun_samd21_mini"
        - "sparkfun_samd21_dev"
        - "pybadge"
        - "pybadge_airlift"
        - "datum_weather"
        - "pyportal_titano"
    
    steps:
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Install deps
      run: |
        sudo apt-get install -y gettext
        pip install requests sh click setuptools
        wget https://s3.amazonaws.com/adafruit-circuit-python/gcc-arm-embedded_7-2018q2-1~xenial1_amd64.deb && sudo dpkg -i gcc-arm-embedded*_amd64.deb
    - name: Versions
      run: |
        gcc --version
        arm-none-eabi-gcc --version
        python3 --version
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: mpy-cross
      run: make -C mpy-cross -j2
    - name: build
      run: TRAVIS_BOARDS="${{ matrix.board }}" python3 -u build_release_files.py
      working-directory: tools

  website:
    runs-on: ubuntu-16.04
    steps:
    - name: Set up Python 3.5
      uses: actions/setup-python@v1
      with:
        python-version: 3.5
    - name: Install deps
      run: |
        pip install requests sh click 
    - name: Versions
      run: |
        gcc --version
        python3 --version
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: CircuitPython version
      run: git describe --dirty --always --tags
    - name: Website
      run: python3 build_board_info.py
      working-directory: tools
